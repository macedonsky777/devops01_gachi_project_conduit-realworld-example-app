services:
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=database_development
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d database_development"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: node-backend
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - JWT_KEY=supersecretkey_example
      - DEV_DB_USERNAME=root
      - DEV_DB_PASSWORD=root
      - DEV_DB_NAME=database_development
      - DEV_DB_HOSTNAME=db
      - DEV_DB_DIALECT=postgres
      - DEV_DB_LOGGING=1
      - NODE_ENV=development
    depends_on:
      - db
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    command: ["npm", "run", "dev"]

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: node-frontend
    ports:
      - "3000:3000"
      - "5173:5173"
    environment:
      - VITE_API_URL=http://backend:3001
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    command: ["npm", "run", "dev"]

volumes:
  postgres_data:
networks:
  app-network:
    driver: bridge
