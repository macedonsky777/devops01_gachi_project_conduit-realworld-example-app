services:
  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${PROD_DB_USERNAME}
      - POSTGRES_PASSWORD=${PROD_DB_PASSWORD}
      - POSTGRES_DB=${PROD_DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PROD_DB_USERNAME} -d ${PROD_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_KEY=${JWT_KEY}
      - PROD_DB_USERNAME=${PROD_DB_USERNAME}
      - PROD_DB_PASSWORD=${PROD_DB_PASSWORD}
      - PROD_DB_NAME=${PROD_DB_NAME}
      - PROD_DB_HOSTNAME=db
      - PROD_DB_DIALECT=postgres
      - PROD_DB_LOGGING=0
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:
networks:
  app-network:
    driver: bridge
